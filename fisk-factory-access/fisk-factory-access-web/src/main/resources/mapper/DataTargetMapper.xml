<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fisk.dataaccess.mapper.DataTargetMapper">
    <select id="queryList" resultType="com.fisk.dataaccess.dto.output.datatarget.DataTargetPageResultDTO">
        SELECT
        id,
        data_target_app_id,
        name,
        principal,
        description,
        create_user,
        create_time,
        update_time,
        host,
        api_address
        from tb_data_target
        where del_flag=1 and data_target_app_id = ${dataTargetAppId}
        <if test="query !=null and query.length()>0 ">
            ${query}
        </if>
    </select>

    <insert id="insertDataTarget" useGeneratedKeys="true" keyProperty="id" keyColumn="id"
            parameterType="com.fisk.dataaccess.dto.output.datatarget.DataTargetAddDTO">
        insert into tb_data_target
        (type,
        data_target_app_id,
        name,
        principal,
        description,
        host,
        port,
        connect_account,
        connect_pwd,
        request_way,
        api_address,
        authentication_method,
        authentication_url,
        token,
        create_user,
        create_time,
        del_flag)
        values
        (#{dataTargetDto.type},
        #{dataTargetDto.dataTargetAppId},
        #{dataTargetDto.name},
        #{dataTargetDto.principal},
        #{dataTargetDto.description},
        #{dataTargetDto.host},
        #{dataTargetDto.port},
        #{dataTargetDto.connectAccount},
        #{dataTargetDto.connectPwd},
        #{dataTargetDto.requestWay},
        #{dataTargetDto.apiAddress},
        #{dataTargetDto.authenticationMethod},
        #{dataTargetDto.authenticationUrl},
        #{dataTargetDto.token},
        #{dataTargetDto.createUserId},
        #{dataTargetDto.createTime},
        1)
    </insert>

</mapper>