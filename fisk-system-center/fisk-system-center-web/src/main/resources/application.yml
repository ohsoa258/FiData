server:
  port: 8085
spring:
  application:
    name: user-service
  # 日志输入环境
  profiles:
    active: dev

fk:
  jwt:
    key: helloWorldJavaLeyouAuthServiceSecretKey # 私钥
  encoder:
    crypt:
      secret: ${random.uuid} # 随机的密钥，使用uuid
      strength: 6 # 加密强度4~31，决定盐加密时的运算强度，超过10以后加密耗时会显著增加
  # 配置此条信息,当前服务开启时会调用feign接口,去授权中心获取秘钥
  auth:
    clientId: system-service
    secret: 1234

mybatis-plus:
  global-config:
    db-config:
      id-type: auto #主键自增
      insert-strategy: not_empty #insert操作时,字段值不为空
      update-strategy: not_empty
      logic-delete-field: del_flag  # 全局逻辑删除的实体字段名(since 3.3.0,配置后可以忽略不配置步骤2)
      logic-delete-value: 0 # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 1 # 逻辑未删除值(默认为 0)
  type-aliases-package: com.fisk.system.entity #包扫描
  type-enums-package: com.fisk.system.enums

eureka:
  client:
    healthcheck:
      enabled: true
    serviceUrl:
      # eureka服务端地址
      defaultZone: http://127.0.0.1:8082/eureka
    # 自己去服务端获取其他服务注册信息间隔时间，默认30秒
    registry-fetch-interval-seconds: 2
    # 客户端连接eureka服务端超时时间，默认为5秒
    eureka-server-connect-timeout-seconds: 5
    # 客户端读取eureka服务端超时时间
    eureka-server-read-timeout-seconds: 5
  instance:
    metadata-map:
      cluster: ${spring.application.name}
    instance-id: ${spring.cloud.client.ip-address}:${server.port}
    # status-page-url-path: ${server.servletPath}/info
    # 该服务实例安全健康检查地址
    # health-check-url-path: ${server.servletPath}/health
    # 不使用主机名来定义注册中心的地址，而使用IP地址的形式，如果设置了
    # eureka.instance.ip-address 属性，则使用该属性配置的IP，否则自动获取除环路IP外的第一个IP地址
    prefer-ip-address: true
    # 每隔n秒，发送一次心跳 （spring cloud 默认配置30s）
    lease-renewal-interval-in-seconds: 2
    # 告诉eureka服务端，n秒内未收到心跳，就将该服务剔除 （spring cloud 默认配置90s）
    lease-expiration-duration-in-seconds: 4