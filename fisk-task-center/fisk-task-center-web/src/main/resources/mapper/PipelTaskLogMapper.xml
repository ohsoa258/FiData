<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fisk.task.mapper.PipelTaskLogMapper">
    <!-- 这个cache 是关键 -->
    <cache eviction="LRU" flushInterval="100000" readOnly="true" size="256"/>
    <select id="getByTaskId" resultType="com.fisk.task.dto.dispatchlog.PipelTaskLogVO">
        select * from tb_pipel_task_log where task_id=#{taskId}
        <if test="jobTraceId != null and jobTraceId != '' ">
            and job_trace_id=#{jobTraceId}
        </if>
        order by create_time desc

    </select>

    <select id="getDataServiceTableLogs" resultType="com.fisk.task.dto.dispatchlog.DataServiceTableLogVO">
        SELECT
        *
        FROM
        (
        SELECT
        t1.table_id as tableId,
        t1.task_trace_id AS taskTraceId,
        t1.start_time AS startTime,
        CASE

        WHEN t2.msg IS NULL
        OR t2.msg = '' THEN
        '' ELSE t1.end_time
        END AS endTime,
        CASE

        WHEN t2.msg IS NULL
        OR t2.msg = '' THEN
        '暂无同步结束记录'
        WHEN t1.start_time != t1.end_time
        AND t2.msg IS NOT NULL
        AND t2.msg != '' THEN
        t2.msg ELSE t2.msg
        END AS msg
        FROM
        (
        SELECT
        table_id,
        task_trace_id,
        MIN( create_time ) AS start_time,
        MAX( create_time ) AS end_time
        FROM
        tb_pipel_task_log
        WHERE
        table_type = #{query.tableType}
        <if test="query.tableIdList != null and query.tableIdList.size()!=0 ">
            and table_id in
            <foreach collection="query.tableIdList" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        GROUP BY
        table_id,
        task_trace_id
        ORDER BY
        start_time DESC,
        table_id ASC
        ) t1
        LEFT JOIN (
        SELECT
        table_id,
        task_trace_id,
        create_time,
        msg
        FROM
        tb_pipel_task_log t2
        WHERE
        type = 8
        AND table_type = #{query.tableType}
        <if test="query.tableIdList != null and query.tableIdList.size()!=0 ">
            and table_id in
            <foreach collection="query.tableIdList" item="item" index="index" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
        GROUP BY
        table_id,
        task_trace_id,
        create_time,
        msg
        ) t2 ON t1.table_id = t2.table_id
        AND t1.task_trace_id = t2.task_trace_id
        AND t1.end_time = t2.create_time
        ) result
    </select>
    <select id="getTableServerStatisticsLog" resultType="Integer">
        SELECT COUNT(1) AS num
        FROM tb_pipel_task_log
        where msg like concat('%', #{result}, '%')
          AND create_time >= DATE_SUB( CURDATE(), INTERVAL ( #{lookday} - 1 ) DAY )
          and del_flag = 1 and table_type = 15
    </select>

    <resultMap id="GanttChartMap" type="com.fisk.task.vo.tableservice.TableGanttChartVO">
        <result property="tableServiceName" column="table_name" ></result>
        <collection property="ganttChartDetailVOList" ofType="com.fisk.task.vo.tableservice.TableGanttChartTaskVO">
            <result property="startDateTime" column="start_time"/>
            <result property="endDateTime" column="end_time"/>
        </collection>
    </resultMap>
    <select id="getGanttChart" resultMap="GanttChartMap">
        SELECT t1.table_name, t2.create_time AS start_time, t3.create_time AS end_time
        FROM (
                 SELECT DISTINCT t1.table_name,t2.task_trace_id FROM dmp_dataservice_db.tb_table_service t1 LEFT JOIN dmp_task_db.tb_pipel_task_log t2 on t1.id = t2.table_id WHERE t1.del_flag = 1 and t2.table_type = 15 and t2.create_time >= CURDATE()
             ) AS t1
                 LEFT JOIN dmp_task_db.tb_pipel_task_log t2 ON t1.task_trace_id = t2.task_trace_id AND t2.type = 7
                 LEFT JOIN dmp_task_db.tb_pipel_task_log t3 ON t1.task_trace_id = t3.task_trace_id AND t3.type = 8;
    </select>

    <select id="getTopRunningTime" resultType="com.fisk.task.vo.tableservice.TableTopRunningTimeVO">
        SELECT
            t4.table_name,
            max( running_time ) AS running_time
        FROM
            (
                SELECT
                    t1.table_name,
                    t2.create_time AS start_time,
                    t3.create_time AS end_time,
                    TIMESTAMPDIFF( SECOND, t2.create_time, t3.create_time ) AS running_time
                FROM
                    (
                        SELECT DISTINCT
                            t1.table_name,
                            t2.task_trace_id
                        FROM
                            dmp_dataservice_db.tb_table_service t1
                                LEFT JOIN dmp_task_db.tb_pipel_task_log t2 ON t1.id = t2.table_id
                        WHERE
                            t1.del_flag = 1
                          AND t2.table_type = 15
                          AND t2.create_time >= DATE_SUB(
                                CURDATE(),
                                INTERVAL ( #{lookday} - 1 ) DAY )
                    ) AS t1
                        LEFT JOIN dmp_task_db.tb_pipel_task_log t2 ON t1.task_trace_id = t2.task_trace_id
                        AND t2.type = 7
                        LEFT JOIN dmp_task_db.tb_pipel_task_log t3 ON t1.task_trace_id = t3.task_trace_id
                        AND t3.type = 8
                WHERE
                    t3.create_time IS NOT NULL
            ) AS t4
        GROUP BY
            t4.table_name
            LIMIT 20
    </select>
    <select id="getFaildStatistics" resultType="com.fisk.task.vo.tableservice.TableFaildStatisticsVO">
        SELECT
            t5.table_name,
            t4.sum,
            t4.failed AS failedNum,
            t4.success AS successNum
        FROM
            dmp_dataservice_db.tb_table_service AS t5
                LEFT JOIN (
                SELECT
                    t1.table_id,
                    t1.num AS sum,
						t2.num AS success,
				t3.num AS failed
                FROM
                    (
                    SELECT
                    table_id,
                    COUNT( 1 ) AS num
                    FROM
                    tb_pipel_task_log
                    WHERE
                    msg LIKE concat( '%', '开始运行', '%' )
                    AND create_time >= DATE_SUB( CURDATE(), INTERVAL ( 1 - 1 ) DAY )
                    AND table_type = 15
                    AND del_flag = 1
                    GROUP BY
                    table_id
                    ) AS t1
                    LEFT JOIN (
                    SELECT
                    table_id,
                    COUNT( 1 ) AS num
                    FROM
                    tb_pipel_task_log
                    WHERE
                    msg LIKE concat( '%', '运行成功', '%' )
                    AND create_time >= DATE_SUB( CURDATE(), INTERVAL ( 1 - 1 ) DAY )
                    and table_type = 15
                    AND del_flag = 1
                    GROUP BY
                    table_id
                    ) AS t2 ON t1.table_id = t2.table_id
                    LEFT JOIN (
                    SELECT
                    table_id,
                    COUNT( 1 ) AS num
                    FROM
                    tb_pipel_task_log
                    WHERE
                    msg LIKE concat( '%', '运行失败', '%' )
                    AND create_time >= DATE_SUB( CURDATE(), INTERVAL ( 1 - 1 ) DAY )
                    and table_type = 15
                    AND del_flag = 1
                    GROUP BY
                    table_id
                    ) AS t3 ON t1.table_id = t3.table_id
            ) AS t4 ON t5.id = t4.table_id
        WHERE
            t5.del_flag = 1
    </select>
    <select id="getLineChart" resultType="com.fisk.task.vo.tableservice.TableLineChartVO">
        select a1.date,a2.failed,a2.success from (SELECT
                                                      DATE_ADD(DATE_SUB(CURDATE(), INTERVAL #{lookday} DAY), INTERVAL numbers.n DAY) AS date
                                                  FROM (
                                                      SELECT a.N + b.N * 10 + 1 AS n
                                                      FROM (SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) a,
                                                      (SELECT 0 AS N UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) b
                                                      WHERE a.N + b.N * 10 + 1 &lt;= DATEDIFF(CURDATE(), DATE_SUB(CURDATE(), INTERVAL #{lookday} DAY))
                                                      ) numbers
                                                  ORDER BY date desc) a1
                                                     left join (SELECT
                                                                    t1.date,
                                                                    t1.num AS success,
                                                                    t2.num AS failed
                                                                FROM
                                                                    (SELECT
                                                                         DATE(create_time) as date,
        COUNT( 1 ) AS num
                                                                FROM
                                                                    tb_pipel_task_log
                                                                WHERE
                                                                    msg LIKE concat( '%', '运行成功', '%' )
                                                                  AND create_time >= DATE_SUB( CURDATE(), INTERVAL ( #{lookday} - 1 ) DAY )
                                                                  AND table_type = 15
                                                                  AND del_flag = 1
                                                                GROUP BY
                                                                    DATE(create_time)
        ) AS t1
                                                     LEFT JOIN (
            SELECT
                DATE(create_time) as date,COUNT( 1 ) AS num
        FROM
            tb_pipel_task_log
        WHERE
            msg LIKE concat( '%', '运行失败', '%' )
          AND create_time >= DATE_SUB( CURDATE(), INTERVAL ( #{lookday} - 1 ) DAY )
          AND table_type = 15
          AND del_flag = 1
        GROUP BY
            DATE(create_time)
            ) AS t2 ON t1.date = t2.date) as a2 on a1.date = a2.date
    </select>
    <select id="getDetailLineChart" resultType="com.fisk.task.vo.tableservice.TableServiceLineChartVO">
        SELECT
            t1.table_name,
            DATE(t2.create_time) AS date,
            MAX(TIMESTAMPDIFF( SECOND, t2.create_time, t3.create_time )) AS running_time
        FROM
            (
            SELECT DISTINCT
            t1.table_name,
            t2.task_trace_id
            FROM
            dmp_dataservice_db.tb_table_service t1
            LEFT JOIN dmp_task_db.tb_pipel_task_log t2 ON t1.id = t2.table_id
            WHERE
            t1.del_flag = 1
            AND t2.create_time >= DATE_SUB( CURDATE(), INTERVAL (#{lookday} - 1 ) DAY )
            AND t2.table_type = 15
            ) AS t1
            LEFT JOIN dmp_task_db.tb_pipel_task_log t2 ON t1.task_trace_id = t2.task_trace_id
            AND t2.type = 7
            LEFT JOIN dmp_task_db.tb_pipel_task_log t3 ON t1.task_trace_id = t3.task_trace_id
            AND t3.type = 8
        WHERE
            t3.create_time IS NOT NULL
          AND t1.table_name = #{workflowName}
        GROUP BY DATE(t2.create_time)
    </select>
    <select id="getTableServiceDetailLog" resultType="com.fisk.task.vo.tableservice.TableServiceDetailVO">
        SELECT t1.table_name as tableName,
        t2.create_time AS startDateTime,
        t3.create_time AS endDateTime,
        TIMESTAMPDIFF( SECOND, t2.create_time, t3.create_time) as runningTime,
        t3.msg as runningStatus
        FROM (
        SELECT DISTINCT t1.table_name,t2.task_trace_id
        FROM dmp_dataservice_db.tb_table_service t1
        LEFT JOIN dmp_task_db.tb_pipel_task_log t2 ON t1.id = t2.table_id
        WHERE t1.del_flag = 1
        and t2.table_type = 15
        <choose>
            <when test="dto.lookday != null and dto.lookday != 0">
                and t2.create_time >= DATE_SUB( CURDATE(), INTERVAL ( #{dto.lookday} - 1 ) DAY )
            </when>
            <when test="dto.lookday == null or dto.lookday == 0">
                and t2.create_time >= DATE_SUB( CURDATE(), INTERVAL 29 DAY )
            </when>
        </choose>
        ) AS t1
        LEFT JOIN dmp_task_db.tb_pipel_task_log t2 ON t1.task_trace_id = t2.task_trace_id AND t2.type = 7
        LEFT JOIN dmp_task_db.tb_pipel_task_log t3 ON t1.task_trace_id = t3.task_trace_id AND t3.type = 8
        <if test="dto.workflowName != null and dto.workflowName != '' ">
            WHERE
            t1.workflow_name = #{dto.workflowName}
        </if>
    </select>
    <select id="getDetailLog" resultType="com.fisk.task.vo.tableservice.TableServiceDetailVO">
        SELECT
            t.tableName,
            t.startDateTime,
            t.endDateTime,
            t.runningTime,
            t.runningStatus
        FROM
            (
                SELECT
                    t1.table_name AS tableName,
                    t2.create_time AS startDateTime,
                    t3.create_time AS endDateTime,
                    TIMESTAMPDIFF( SECOND, t2.create_time, t3.create_time ) AS runningTime,
                    t3.msg AS runningStatus
                FROM
                    (
                        SELECT DISTINCT
                            t1.table_name,
                            t2.task_trace_id
                        FROM
                            dmp_dataservice_db.tb_table_service t1
                                LEFT JOIN dmp_task_db.tb_pipel_task_log t2 ON t1.id = t2.table_id
                        WHERE
                            t1.del_flag = 1
                          AND t2.table_type = 15
                          AND t2.create_time >= DATE_SUB( CURDATE(), INTERVAL 1 DAY )
                    ) AS t1
                        LEFT JOIN dmp_task_db.tb_pipel_task_log t2 ON t1.task_trace_id = t2.task_trace_id
                        AND t2.type = 7
                        LEFT JOIN dmp_task_db.tb_pipel_task_log t3 ON t1.task_trace_id = t3.task_trace_id
                        AND t3.type = 8
            ) AS t
                INNER JOIN (
                SELECT
                    t5.tableName,
                    MAX( t5.startDateTime ) AS maxStartDateTime
                FROM
                    (
                        SELECT
                            t1.table_name AS tableName,
                            t2.create_time AS startDateTime,
                            t3.create_time AS endDateTime,
                            TIMESTAMPDIFF( SECOND, t2.create_time, t3.create_time ) AS runningTime,
                            t3.msg AS runningStatus
                        FROM
                            (
                                SELECT DISTINCT
                                    t1.table_name,
                                    t2.task_trace_id
                                FROM
                                    dmp_dataservice_db.tb_table_service t1
                                        LEFT JOIN dmp_task_db.tb_pipel_task_log t2 ON t1.id = t2.table_id
                                WHERE
                                    t1.del_flag = 1
                                  AND t2.table_type = 15
                                  AND t2.create_time >= DATE_SUB( CURDATE(), INTERVAL 1 DAY )
                            ) AS t1
                                LEFT JOIN dmp_task_db.tb_pipel_task_log t2 ON t1.task_trace_id = t2.task_trace_id
                                AND t2.type = 7
                                LEFT JOIN dmp_task_db.tb_pipel_task_log t3 ON t1.task_trace_id = t3.task_trace_id
                                AND t3.type = 8
                    ) AS t5
                GROUP BY
                    t5.tableName
            ) sub ON t.tableName = sub.tableName
                AND t.startDateTime = sub.maxStartDateTime;
    </select>
</mapper>